{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","emails","CardList","friends","map","user","i","email","searchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","anySearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredFriends","this","filter","toLowerCase","includes","lenght","SearchBox","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAeeA,EAbF,SAACC,GACb,OAEC,sBAAKC,UAAU,wDAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,GAAhC,cACtB,gCACA,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,gBCWGC,EAjBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACC,8BAECA,EAAQC,KAAI,SAACC,EAAMC,GAClB,OAAS,cAAC,EAAD,CACAP,GAAII,EAAQG,GAAGP,GACvBC,KAAMG,EAAQG,GAAGN,KACjBC,OAAQE,EAAQG,GAAGC,OAFdD,SCOKE,G,KAbI,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAEjC,OACC,qBAAKd,UAAU,MAAf,SACA,uBACAA,UAAW,oCACXe,KAAK,SACLC,YAAY,uBACZC,SAAUH,QCDGI,G,MARA,SAACnB,GACf,OACC,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCvB,EAAMwB,aC2COC,E,kDAxCd,aAAe,IAAD,8BACb,gBAcDC,gBAAkB,SAACC,GAClB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACZvB,QAAS,GACTM,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,QAAS4B,S,oBAQxC,WAAU,IAAD,OACFC,EAAkBC,KAAKP,MAAMvB,QAAQ+B,QAAO,SAAA/B,GACjD,OAAOA,EAAQH,KAAKmC,cAAcC,SAAS,EAAKV,MAAMjB,YAAY0B,kBAEnE,OAAiC,IAA9BF,KAAKP,MAAMvB,QAAQkC,OACd,yCAGN,sBAAKzC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,wCACA,cAAC0C,EAAD,CAAW5B,aAAcuB,KAAKZ,kBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,QAAS6B,a,GAhCLO,aCKJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAbO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.c0295c05.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\treturn (\n\n\t\t<div className=\"tc bg-light-purple dib br3 pa3 ma2 grow bmw2 shadow-5\">\n\t\t<img alt='friends' src={`https://robohash.org/${props.id}?180x180`} />\n\t\t<div>\n\t\t<h4>{props.name}</h4>\n\t\t<p>{props.emails}</p>\n\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({friends}) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\t\tfriends.map((user, i )=> {\n\t\t\t\treturn ( <Card \n\t\t\t\t\tkey={i} id={friends[i].id} \n\t\t\t\t\tname={friends[i].name} \n\t\t\t\t\temails={friends[i].email}/>\n\t\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</div>\n\n\t\t);\n}\n\nexport default CardList;","import React from 'react';\nimport 'tachyons';\n\nconst  searchBox = ({searchfield, searchChange}) => {\n\n\treturn (\n\t\t<div className='pa2'>\n\t\t<input \n\t\tclassName ='pa3 ba b--purple bg-lightest-blue'\n\t\ttype='search' \n\t\tplaceholder='Search for Engineers' \n\t\tonChange={searchChange}\n\t\t/>\n\t\t</div>\n\t\t);\n}\nexport default searchBox","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '2px solid black', height: '700px'}}>\n\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll;","\timport React, {Component} from 'react';\n\timport CardList from '../components/CardList';\n\timport SearchBox from '../components/SearchBox';\n\t//import friends from './friends';\n\timport './App.css';\n\timport Scroll from '../components/Scroll';\n\n\tclass App extends Component {\n\t\tconstructor() {\n\t\t\tsuper()\n\t\t\tthis.state = {\n\t\t\t\tfriends: [],\n\t\t\t\tsearchfield: ''\n\t\t\t}\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({friends: users}));\t\n\n\t\t}\n\n\t\tanySearchChange = (event) => {\n\t\t\tthis.setState({ searchfield: event.target.value })\n\t\t}\n\n\t\trender() {\n\t\t\tconst filteredFriends = this.state.friends.filter(friends => {\n\t\t\t\treturn friends.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t\t})\n\t\t\tif(this.state.friends.lenght === 0) {\n\t\t\t\treturn <h1>Loading</h1>\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className=\"f2\">Full Stack Java Developers</h1>\n\t\t\t\t\t<SearchBox searchChange={this.anySearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList friends={filteredFriends}/>\n\t\t\t\t\t</Scroll>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\t\n\t}\n\n\texport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\timport React from 'react';\n\timport ReactDOM from 'react-dom';\n\timport './index.css';\n\timport App from './containers/App';\n\timport reportWebVitals from './reportWebVitals';\n\timport 'tachyons';\n\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App/>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t\t);\n\n\t// If you want to start measuring performance in your app, pass a function\n\t// to log results (for example: reportWebVitals(console.log))\n\t// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\treportWebVitals();\n"],"sourceRoot":""}